{"ast":null,"code":"import{useEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{useSelector,useDispatch}from'react-redux';import{SetShownQuestion}from\"../../../redux/slices/quiz\";import{SetSelectedChoice}from\"../../../redux/slices/quiz\";import{SetModalVisible}from\"../../../redux/slices/quiz\";import{SetFinishFlag}from\"../../../redux/slices/quiz\";import{IsTraversing}from\"../../../redux/slices/quiz\";import{Colors}from\"../../../redux/slices/settings\";import{SetComingFromHome}from\"../../../redux/slices/settings\";import{SetIsCorrect}from\"../../../redux/slices/quiz\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function NavigationSection(_ref){var navigation=_ref.navigation,totalCount=_ref.totalCount;var dispatch=useDispatch();var isTraversing=useSelector(IsTraversing);var currentQuestion=useSelector(function(state){return state.quiz.currentQuestion;});var _ref2=[useSelector(function(state){return state.quiz.shownQuestion;}),function(payload){return dispatch(SetShownQuestion(payload));}],shownQuestion=_ref2[0],setShownQuestion=_ref2[1];var _ref3=[useSelector(function(state){return state.quiz.finishFlag;}),function(payload){return dispatch(SetFinishFlag(payload));}],finishFlag=_ref3[0],setFinishFlag=_ref3[1];var setSelectedChoice=function setSelectedChoice(payload){return dispatch(SetSelectedChoice(payload));};var setModalVisible=function setModalVisible(payload){return dispatch(SetModalVisible(payload));};var isCorrect=useSelector(function(state){return state.quiz.isCorrect;});var setIsCorrect=function setIsCorrect(payload){return dispatch(SetIsCorrect(payload));};var colors=useSelector(Colors);var setComingFromHome=function setComingFromHome(payload){return dispatch(SetComingFromHome(payload));};var handleSubmit=function handleSubmit(){if(finishFlag){navigation.navigate('StatsScreen');setComingFromHome(false);}if(isCorrect!=-1&&!finishFlag){setModalVisible(true);}if(currentQuestion==totalCount-1&&isCorrect!=-1){setFinishFlag(true);}};var handleNext=function handleNext(){if(shownQuestion+1==currentQuestion)setIsCorrect(-1);setShownQuestion((shownQuestion+1)%totalCount);};var handleBack=function handleBack(){if(shownQuestion>0&&shownQuestion<totalCount){setShownQuestion((shownQuestion-1)%totalCount);setSelectedChoice(-1);setIsCorrect(-1);}};useEffect(function(){if(currentQuestion===totalCount-1){setFinishFlag(true);}},[]);return _jsxs(View,{style:styles.container,children:[_jsx(View,{style:[styles.submitContainer,{backgroundColor:colors.light,borderColor:colors.border},isCorrect==-1&&!isTraversing?{backgroundColor:colors.dark}:{backgroundColor:colors.light}],children:_jsx(TouchableOpacity,{style:[styles.submit],onPress:function onPress(){return!isTraversing||currentQuestion==totalCount&&shownQuestion==totalCount-1?handleSubmit():handleNext();},children:!isTraversing||currentQuestion==totalCount&&shownQuestion==totalCount-1?_jsx(Text,{style:[styles.submitText,{color:colors.dark},isCorrect==-1&&!finishFlag&&{color:colors.light}],children:finishFlag?'See Results':'Submit'}):_jsx(Text,{style:[styles.submitText,{color:colors.dark}],children:\"Next Question\"})})}),shownQuestion>0&&_jsx(View,{style:[styles.submitContainer,{borderColor:colors.dark,backgroundColor:colors.light}],children:_jsx(TouchableOpacity,{style:styles.submit,onPress:function onPress(){return handleBack();},children:_jsx(Text,{style:[styles.submitText,{color:colors.dark}],children:\"Previous Question\"})})})]});}var styles=StyleSheet.create({container:{flex:1,alignItems:'center',width:'93%'},submitContainer:{maxwidth:'100%',minWidth:'100%',borderWidth:2,marginHorizontal:20,borderRadius:10,padding:10,marginVertical:10},submitText:{fontFamily:'Poppins-Bold',fontSize:17,textAlign:'center'}});","map":{"version":3,"names":["useEffect","useState","useSelector","useDispatch","SetShownQuestion","SetSelectedChoice","SetModalVisible","SetFinishFlag","IsTraversing","Colors","SetComingFromHome","SetIsCorrect","NavigationSection","navigation","totalCount","dispatch","isTraversing","currentQuestion","state","quiz","shownQuestion","payload","setShownQuestion","finishFlag","setFinishFlag","setSelectedChoice","setModalVisible","isCorrect","setIsCorrect","colors","setComingFromHome","handleSubmit","navigate","handleNext","handleBack","styles","container","submitContainer","backgroundColor","light","borderColor","border","dark","submit","submitText","color","StyleSheet","create","flex","alignItems","width","maxwidth","minWidth","borderWidth","marginHorizontal","borderRadius","padding","marginVertical","fontFamily","fontSize","textAlign"],"sources":["/Users/essam/Documents/GitHub/Quizzery-React-Native/components/QuizScreen/subcomponents/NavigationSection.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SetShownQuestion } from \"../../../redux/slices/quiz\";\nimport { SetSelectedChoice } from \"../../../redux/slices/quiz\";\nimport { SetModalVisible } from \"../../../redux/slices/quiz\";\nimport { SetFinishFlag  } from '../../../redux/slices/quiz';\nimport { IsTraversing } from '../../../redux/slices/quiz';\nimport { Colors } from '../../../redux/slices/settings';\nimport { SetComingFromHome } from '../../../redux/slices/settings';\nimport { SetIsCorrect } from '../../../redux/slices/quiz';\n\nexport default function NavigationSection({ navigation,  totalCount }) {\n   const dispatch = useDispatch();\n   const isTraversing = useSelector(IsTraversing);\n   const  currentQuestion  = useSelector(state => state.quiz.currentQuestion)\n   const [shownQuestion , setShownQuestion] = [ useSelector(state => state.quiz.shownQuestion), (payload) => dispatch(SetShownQuestion(payload))];\n   const [finishFlag, setFinishFlag] = [ useSelector(state => state.quiz.finishFlag), (payload) => dispatch(SetFinishFlag(payload))];\n   const setSelectedChoice = (payload) => dispatch(SetSelectedChoice(payload));\n   const setModalVisible = (payload) => dispatch(SetModalVisible(payload));\n   const isCorrect = useSelector(state => state.quiz.isCorrect);\n   const setIsCorrect = (payload) => dispatch(SetIsCorrect(payload))\n   const colors = useSelector(Colors)\n   const setComingFromHome = (payload)=> dispatch(SetComingFromHome(payload))\n   const handleSubmit = () => {\n      if(finishFlag){\n         navigation.navigate('StatsScreen')\n         setComingFromHome(false)\n      }\n      if (isCorrect != -1 && !finishFlag) {\n         setModalVisible(true);\n      }\n      if(currentQuestion == totalCount -1 && isCorrect != -1){\n         setFinishFlag(true);\n      }\n      \n   }\n\n   const handleNext = () => {\n      if(shownQuestion + 1 == currentQuestion)   setIsCorrect(-1)\n      setShownQuestion((shownQuestion + 1) % totalCount);\n      \n   }\n\n   const handleBack = () => {\n      if (shownQuestion > 0 && shownQuestion < totalCount) {\n         setShownQuestion((shownQuestion - 1) % totalCount);\n         setSelectedChoice(-1);\n         setIsCorrect(-1)\n      }\n   }\n\n   useEffect(() => {\n      if(currentQuestion===totalCount-1){\n         setFinishFlag(true);\n      }},[]);\n\n\n   return (\n      <View style={styles.container}>\n         <View style={[styles.submitContainer, { backgroundColor: colors.light, borderColor: colors.border }, (isCorrect == -1 && !isTraversing) ? { backgroundColor: colors.dark } : { backgroundColor: colors.light }]}>\n            <TouchableOpacity style={[styles.submit]} onPress={() => (!isTraversing || ((currentQuestion == totalCount) && (shownQuestion == totalCount - 1))) ? handleSubmit():handleNext() }>\n               {(!isTraversing || ((currentQuestion == totalCount) && (shownQuestion == totalCount - 1))) ?\n                  (\n                     <Text style={[styles.submitText,   { color: colors.dark, }, ((isCorrect == -1) && !finishFlag) && { color: colors.light }]} >\n                        {( finishFlag ) ? 'See Results' : 'Submit'}\n                     </Text>\n                  )\n                  : (\n                     <Text style={[styles.submitText, { color: colors.dark, }]} >\n                        Next Question\n                     </Text>\n                  )\n               }\n            </TouchableOpacity>\n         </View>\n         {(shownQuestion > 0) &&\n            <View style={[styles.submitContainer, { borderColor: colors.dark, backgroundColor: colors.light }]}>\n               <TouchableOpacity style={styles.submit} onPress={() => handleBack()}>\n                  <Text style={[styles.submitText, { color: colors.dark }]}>\n                     Previous Question\n                  </Text>\n               </TouchableOpacity>\n            </View>\n         }\n      </View>\n   )\n}\n\n\nconst styles = StyleSheet.create({\n   container: {\n      flex: 1,\n      alignItems: 'center',\n      width: '93%'\n   },\n\n   submitContainer: {\n      maxwidth: '100%',\n      minWidth: '100%',\n      borderWidth: 2,\n      marginHorizontal: 20,\n      borderRadius: 10,\n      padding: 10,\n      marginVertical: 10,\n   },\n   submitText: {\n      fontFamily: 'Poppins-Bold',\n      fontSize: 17,\n      textAlign: 'center'\n   }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}