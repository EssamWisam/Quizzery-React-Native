{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import{StatusBar}from'expo-status-bar';import React,{useEffect}from'react';import{useFonts}from'expo-font';import*as Progress from'react-native-progress';import HomeScreen from\"./components/HomeScreen/HomeScreen\";import QuizScreen from\"./components/QuizScreen/QuizScreen\";import StatsScreen from\"./components/StatScreen/StatsScreen\";import SettingsScreen from\"./components/SettingsScreen/SettingsScreen\";import AboutScreen from\"./components/AboutScreen/AboutScreen\";import Entries from\"./assets/data/QuizEntries\";import'react-native-gesture-handler';import{NavigationContainer}from'@react-navigation/native';import{createStackNavigator}from'@react-navigation/stack';import{Provider}from'react-redux';import{persistor}from\"./redux/store\";import{useSelector,useDispatch}from'react-redux';import{RotateColor}from\"./redux/slices/settings\";import{PersistGate}from'redux-persist/integration/react';import{store}from\"./redux/store\";import{SetNewQuiz}from\"./redux/slices/quiz\";import{Colors}from\"./redux/slices/settings\";import Platform from\"react-native-web/dist/exports/Platform\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Stack=createStackNavigator();var AppWrapper=function AppWrapper(){return _jsx(Provider,{store:store,children:_jsx(PersistGate,{persistor:persistor,children:_jsx(App,{})})});};function App(){var _useFonts=useFonts({'Poppins-Light':require(\"./assets/fonts/Poppins-Light.ttf\"),'Poppins-Regular':require(\"./assets/fonts/Poppins-Regular.ttf\"),'Poppins-Italic':require(\"./assets/fonts/Poppins-Italic.ttf\"),'Poppins-Bold':require(\"./assets/fonts/Poppins-Bold.ttf\"),'Poppins-ExtraBoldItalic':require(\"./assets/fonts/Poppins-ExtraBoldItalic.ttf\"),'Poppins-ExtraBold':require(\"./assets/fonts/Poppins-ExtraBold.ttf\")}),_useFonts2=_slicedToArray(_useFonts,1),fontsLoaded=_useFonts2[0];var dispatch=useDispatch();var newQuiz=useSelector(function(state){return state.quiz.newQuiz;});useEffect(function(){if(newQuiz){dispatch(SetNewQuiz(false));for(var i=Entries.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var _ref=[Entries[j],Entries[i]];Entries[i]=_ref[0];Entries[j]=_ref[1];}}},[newQuiz]);var totalCount=Entries.length;var shownQuestion=useSelector(function(state){return state.quiz.shownQuestion;});var correctAnswers=Entries.map(function(_ref2){var correct=_ref2.correct;return correct;});var colors=useSelector(Colors);var allColorsHelper=useSelector(function(state){return state.settings.allColorsHelper;});useEffect(function(){dispatch(RotateColor());},[shownQuestion]);if(!fontsLoaded){return _jsx(Progress.CircleSnail,{color:['red','green','blue']});}return _jsxs(_Fragment,{children:[_jsx(StatusBar,{style:allColorsHelper==1?\"dark\":\"light\"}),_jsx(NavigationContainer,{children:_jsxs(Stack.Navigator,{children:[_jsx(Stack.Screen,{name:\"HomeScreen\",options:{headerShown:false},children:function children(props){return _jsx(HomeScreen,_objectSpread({},props));}}),_jsx(Stack.Screen,{name:\"QuizScreen\",options:{headerShown:Platform.OS==='web',title:'Quiz',headerStyle:{backgroundColor:colors.dark,borderBottomWidth:0},headerTintColor:colors.light,headerTitleStyle:{fontFamily:'Poppins-Regular',fontSize:40}},children:function children(props){return _jsx(QuizScreen,_objectSpread(_objectSpread({},props),{},{totalCount:totalCount,correctAnswers:correctAnswers,shownQuestion:shownQuestion}));}}),_jsx(Stack.Screen,{name:\"StatsScreen\",options:{headerShown:Platform.OS==='web',title:'Statistics',headerStyle:{backgroundColor:colors.dark,borderBottomWidth:0},headerTintColor:colors.light,headerTitleStyle:{fontFamily:'Poppins-Regular',fontSize:40}},children:function children(props){return _jsx(StatsScreen,_objectSpread(_objectSpread({},props),{},{correctAnswers:correctAnswers}));}}),_jsx(Stack.Screen,{name:\"SettingsScreen\",options:{headerShown:Platform.OS==='web',title:'Settings',headerStyle:{backgroundColor:colors.dark,borderBottomWidth:0},headerTintColor:colors.light,headerTitleStyle:{fontFamily:'Poppins-Regular',fontSize:40}},children:function children(props){return _jsx(SettingsScreen,_objectSpread({},props));}}),_jsx(Stack.Screen,{name:\"AboutScreen\",options:{headerShown:Platform.OS==='web',title:'About',headerStyle:{backgroundColor:colors.dark,borderBottomWidth:0},headerTintColor:colors.light,headerTitleStyle:{fontFamily:'Poppins-Regular',fontSize:40}},children:function children(props){return _jsx(AboutScreen,_objectSpread({},props));}})]})})]});}export default AppWrapper;","map":{"version":3,"names":["StatusBar","React","useEffect","useFonts","Progress","HomeScreen","QuizScreen","StatsScreen","SettingsScreen","AboutScreen","Entries","NavigationContainer","createStackNavigator","Provider","persistor","useSelector","useDispatch","RotateColor","PersistGate","store","SetNewQuiz","Colors","Stack","AppWrapper","App","require","fontsLoaded","dispatch","newQuiz","state","quiz","i","length","j","Math","floor","random","totalCount","shownQuestion","correctAnswers","map","correct","colors","allColorsHelper","settings","headerShown","props","Platform","OS","title","headerStyle","backgroundColor","dark","borderBottomWidth","headerTintColor","light","headerTitleStyle","fontFamily","fontSize"],"sources":["/Users/essam/Documents/GitHub/Quizzery-React-Native/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as Progress from 'react-native-progress';\nimport HomeScreen from './components/HomeScreen/HomeScreen';\nimport QuizScreen from './components/QuizScreen/QuizScreen';\nimport StatsScreen from './components/StatScreen/StatsScreen';\nimport SettingsScreen from './components/SettingsScreen/SettingsScreen';\nimport AboutScreen from './components/AboutScreen/AboutScreen';\nimport Entries from './assets/data/QuizEntries';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Provider } from 'react-redux';\nimport { persistor } from './redux/store';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RotateColor } from './redux/slices/settings'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store } from './redux/store';\nimport { SetNewQuiz } from './redux/slices/quiz';\nimport { Colors } from './redux/slices/settings';\nimport { Platform } from 'react-native';\n\n\n\nconst Stack = createStackNavigator();\n\nconst AppWrapper = () => {\n  return (\n    <Provider store={store}>\n       <PersistGate persistor={persistor}>  \n      <App />\n       </PersistGate>  \n    </Provider>\n  )\n}\n\nfunction App() {\n\n  const [fontsLoaded] = useFonts({\n    'Poppins-Light': require('./assets/fonts/Poppins-Light.ttf'),\n    'Poppins-Regular': require('./assets/fonts/Poppins-Regular.ttf'),\n    'Poppins-Italic': require('./assets/fonts/Poppins-Italic.ttf'),\n    'Poppins-Bold': require('./assets/fonts/Poppins-Bold.ttf'),\n    'Poppins-ExtraBoldItalic': require('./assets/fonts/Poppins-ExtraBoldItalic.ttf'),\n    'Poppins-ExtraBold': require('./assets/fonts/Poppins-ExtraBold.ttf'),\n  });\n  const dispatch = useDispatch();\n\n  const newQuiz = useSelector(state => state.quiz.newQuiz);\n  useEffect(() => {\n    if (newQuiz) {\n      dispatch(SetNewQuiz(false));\n      for (var i = Entries.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [Entries[i], Entries[j]] = [Entries[j], Entries[i]];\n    }\n    }\n  },[newQuiz]);\n\n  const totalCount = Entries.length;\n\n  const shownQuestion = useSelector(state => state.quiz.shownQuestion)\n\n  const correctAnswers = Entries.map(({ correct }) => correct)\n\n  const colors = useSelector(Colors)\n\n\n  const allColorsHelper = useSelector(state => state.settings.allColorsHelper)\n\n  useEffect(() => { \n    dispatch(RotateColor()) }, [shownQuestion]);\n\n  if (!fontsLoaded) {\n    return <Progress.CircleSnail color={['red', 'green', 'blue']} />\n  }\n\n  return (\n    <>\n      <StatusBar style={(allColorsHelper == 1) ? \"dark\" : \"light\"} />\n      <NavigationContainer>\n        <Stack.Navigator>\n\n          <Stack.Screen name=\"HomeScreen\" options={{ headerShown: false }}>\n            {(props) => <HomeScreen  {...props} />}\n          </Stack.Screen>\n\n          <Stack.Screen name=\"QuizScreen\" \n            options={{\n              headerShown: (Platform.OS === 'web'),\n              title: 'Quiz',\n              headerStyle: {\n                backgroundColor: colors.dark,\n                borderBottomWidth: 0,\n              },\n              headerTintColor: colors.light,\n              headerTitleStyle: {\n                fontFamily: 'Poppins-Regular',\n                fontSize: 40,\n  \n              },\n            }}\n          >\n            {(props) => <QuizScreen {...props} totalCount={totalCount} correctAnswers={correctAnswers}\n                          shownQuestion={shownQuestion} />}\n          </Stack.Screen>\n\n          <Stack.Screen name=\"StatsScreen\" \n            options={{\n              headerShown: (Platform.OS === 'web'),\n              title: 'Statistics',\n              headerStyle: {\n                backgroundColor: colors.dark,\n                borderBottomWidth: 0,\n              },\n              headerTintColor: colors.light,\n              headerTitleStyle: {\n                fontFamily: 'Poppins-Regular',\n                fontSize: 40,\n  \n              },\n            }}\n          >\n            {(props) => <StatsScreen {...props} correctAnswers={correctAnswers} />}\n          </Stack.Screen>\n\n          <Stack.Screen name=\"SettingsScreen\" \n            options={{\n              headerShown: (Platform.OS === 'web'),\n              title: 'Settings',\n              headerStyle: {\n                backgroundColor: colors.dark,\n                borderBottomWidth: 0,\n              },\n              headerTintColor: colors.light,\n              headerTitleStyle: {\n                fontFamily: 'Poppins-Regular',\n                fontSize: 40,\n  \n              },\n            }}\n\n          >\n            {(props) =>  <SettingsScreen {...props} />}\n          </Stack.Screen>\n\n          <Stack.Screen name=\"AboutScreen\" \n          options={{\n            headerShown: (Platform.OS === 'web'),\n            title: 'About',\n            headerStyle: {\n              backgroundColor: colors.dark,\n              borderBottomWidth: 0,\n            },\n            headerTintColor: colors.light,\n            headerTitleStyle: {\n              fontFamily: 'Poppins-Regular',\n              fontSize: 40,\n\n            },\n          }}\n\n          \n          >\n            {(props) =>  <AboutScreen {...props} />}\n          </Stack.Screen>\n\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  )\n\n\n}\n\nexport default AppWrapper;"],"mappings":"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"},"metadata":{},"sourceType":"module"}