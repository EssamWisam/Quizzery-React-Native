{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{useSelector,useDispatch}from'react-redux';import{Colors}from\"../../redux/slices/settings\";import{ResetQuiz}from\"../../redux/slices/quiz\";import{SetAccuracy}from\"../../redux/slices/stats\";import Platform from\"react-native-web/dist/exports/Platform\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function StatsScreen(_ref){var correctAnswers=_ref.correctAnswers,navigation=_ref.navigation;var dispatch=useDispatch();var colors=useSelector(Colors);var comingFromHome=useSelector(function(state){return state.settings.comingFromHome;});var resetQuiz=function resetQuiz(){return dispatch(ResetQuiz());};var selectedChoices=useSelector(function(state){return state.quiz.selectedChoices;});var correctAnswersTrimmed=correctAnswers.slice(0,selectedChoices.length);var differenceArray=correctAnswersTrimmed.map(function(answer,i){return answer-selectedChoices[i];});var _ref2=[useSelector(function(state){return state.stats.accuracy;}),function(payload){return dispatch(SetAccuracy(payload));}],accuracy=_ref2[0],setAccuracy=_ref2[1];var _useState=useState('0'),_useState2=_slicedToArray(_useState,2),winningStreak=_useState2[0],setWinningStreak=_useState2[1];var _useState3=useState('-'),_useState4=_slicedToArray(_useState3,2),rank=_useState4[0],setRank=_useState4[1];useEffect(function(){if(selectedChoices.length>0){var acc=Math.ceil(differenceArray.filter(function(v){return v===0;}).length/selectedChoices.length*100);setAccuracy(acc);var longestStreak=0;var currStreak=0;var i=0;while(i<differenceArray.length){if(differenceArray[i]==0){currStreak+=1;}else{longestStreak=Math.max(longestStreak,currStreak);currStreak=0;}i++;}setWinningStreak(Math.max(longestStreak,currStreak));if(acc<10)setRank('Wood 🪵');else if(acc<25)setRank('Iron 🪨');else if(acc<35)setRank('Bronze 🔱');else if(acc<45)setRank('Silver ⚓');else if(acc<60)setRank('Gold 🎖');else if(acc<70)setRank('Platinum 💠');else if(acc<80)setRank('Diamond 💎');else if(acc<95)setRank('Master 👑');else if(acc<98)setRank('Professor 🎓');else setRank('Legend 🐉');}},[selectedChoices]);return _jsxs(View,{style:[styles.container,{backgroundColor:colors.dark}],children:[Platform.OS!=='web'&&_jsx(View,{style:styles.logoContainer,children:_jsx(Text,{style:[styles.logo,{color:colors.light}],children:\"Statistics\"})}),_jsxs(View,{style:[styles.settingContainer,{backgroundColor:colors.dark,borderColor:colors.light}],children:[_jsx(Text,{style:[styles.settingText,{color:colors.light}],onPress:function onPress(){},children:\"Your Highest Accuracy is\"}),_jsx(Text,{style:[styles.settingText,{color:colors.light,fontSize:50}],onPress:function onPress(){},children:accuracy=='-.0%'?'-':accuracy})]}),_jsxs(View,{style:[styles.settingContainer,{backgroundColor:colors.dark,borderColor:colors.light}],children:[_jsx(Text,{style:[styles.settingText,{color:colors.light}],onPress:function onPress(){},children:\"Your Longest Winning Streak is\"}),_jsx(Text,{style:[styles.settingText,{color:colors.light,fontSize:50}],onPress:function onPress(){},children:winningStreak})]}),_jsxs(View,{style:[styles.settingContainer,{backgroundColor:colors.dark,borderColor:colors.light}],children:[_jsx(Text,{style:[styles.settingText,{color:colors.light}],onPress:function onPress(){},children:\"Your Overall Rank is\"}),_jsx(Text,{style:[styles.settingText,{color:colors.light,fontSize:50}],onPress:function onPress(){},children:rank})]}),_jsx(View,{style:[styles.settingContainer,{backgroundColor:colors.light,borderColor:colors.dark}],children:_jsx(TouchableOpacity,{children:_jsx(Text,{style:[styles.settingText,{color:colors.dark}],onPress:function onPress(){resetQuiz();setAccuracy('-');setWinningStreak('0');setRank('-');},children:\"Reset Progress\"})})}),!comingFromHome?_jsx(_Fragment,{children:_jsx(View,{style:[styles.settingContainer,{backgroundColor:colors.light,borderColor:colors.dark}],children:_jsx(TouchableOpacity,{children:_jsx(Text,{style:[styles.settingText,{color:colors.dark}],onPress:function onPress(){navigation.navigate('HomeScreen');},children:\"Home\"})})})}):null]});}var styles=StyleSheet.create({container:{flex:1},logo:{fontSize:40,fontFamily:'Poppins-Regular',textAlign:'left'},logoContainer:{marginTop:50,marginBottom:10,marginHorizontal:20},settingContainer:{minWidth:'90%',borderWidth:2,marginHorizontal:20,borderRadius:10,padding:10,marginVertical:10},settingText:{fontFamily:'Poppins-Bold',fontSize:17,textAlign:'center'}});","map":{"version":3,"names":["useEffect","useState","useSelector","useDispatch","Colors","ResetQuiz","SetAccuracy","StatsScreen","correctAnswers","navigation","dispatch","colors","comingFromHome","state","settings","resetQuiz","selectedChoices","quiz","correctAnswersTrimmed","slice","length","differenceArray","map","answer","i","stats","accuracy","payload","setAccuracy","winningStreak","setWinningStreak","rank","setRank","acc","Math","ceil","filter","v","longestStreak","currStreak","max","styles","container","backgroundColor","dark","Platform","OS","logoContainer","logo","color","light","settingContainer","borderColor","settingText","fontSize","navigate","StyleSheet","create","flex","fontFamily","textAlign","marginTop","marginBottom","marginHorizontal","minWidth","borderWidth","borderRadius","padding","marginVertical"],"sources":["/Users/essam/Documents/GitHub/Quizzery-React-Native/components/StatScreen/StatsScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Colors } from '../../redux/slices/settings';\nimport { ResetQuiz } from '../../redux/slices/quiz';\nimport { SetAccuracy } from '../../redux/slices/stats';\nimport { Platform } from 'react-native';\n\nexport default function StatsScreen({ correctAnswers, navigation }) {\n   const dispatch = useDispatch();\n   const colors = useSelector(Colors);\n   const comingFromHome = useSelector(state => state.settings.comingFromHome);\n   const resetQuiz = () => dispatch(ResetQuiz());\n   const selectedChoices = useSelector(state => state.quiz.selectedChoices);\n   let correctAnswersTrimmed = correctAnswers.slice(0, selectedChoices.length);\n   let differenceArray = correctAnswersTrimmed.map(function (answer, i) {\n      return answer - selectedChoices[i];\n   });\n   const [accuracy, setAccuracy] = [ useSelector(state => state.stats.accuracy), (payload)=> dispatch(SetAccuracy(payload))];\n   const [winningStreak, setWinningStreak] = useState('0');\n   const [rank, setRank] = useState('-');\n   useEffect(() => {\n      if (selectedChoices.length > 0) {\n         let acc = Math.ceil((differenceArray.filter(v => v === 0).length / selectedChoices.length) * 100)\n         setAccuracy(acc);\n         let longestStreak = 0\n         let currStreak = 0\n         let i = 0\n         while (i < differenceArray.length) {\n            if (differenceArray[i] == 0) {\n               currStreak += 1\n            }\n            else {\n               longestStreak = Math.max(longestStreak, currStreak)\n               currStreak = 0\n            }\n            i++\n         }\n         setWinningStreak( Math.max(longestStreak, currStreak))\n\n         if (acc < 10)\n            setRank('Wood 🪵')\n         else if (acc < 25)\n            setRank('Iron 🪨')\n         else if (acc < 35)\n            setRank('Bronze 🔱')\n         else if (acc < 45)\n            setRank('Silver ⚓')\n         else if (acc < 60)\n            setRank('Gold 🎖')\n         else if (acc < 70)\n            setRank('Platinum 💠')\n         else if (acc < 80)\n            setRank('Diamond 💎')\n         else if (acc < 95)\n            setRank('Master 👑')\n         else if (acc < 98)\n            setRank('Professor 🎓')\n         else\n            setRank('Legend 🐉')\n      }\n\n   }, [selectedChoices])\n\n\n\n\n   return (\n      <View style={[styles.container, { backgroundColor: colors.dark }]}>\n         {(Platform.OS !== 'web')&&<View style={styles.logoContainer}>\n            <Text style={[styles.logo, { color: colors.light }]}>\n               Statistics\n            </Text>\n         </View>}\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Highest Accuracy is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n              {(accuracy=='-.0%')?('-'):(accuracy)} \n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Longest Winning Streak is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n               {winningStreak}\n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Overall Rank is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n               {rank}\n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.light, borderColor: colors.dark }]}>\n                  <TouchableOpacity>\n                     <Text style={[styles.settingText, { color: colors.dark, }]} onPress={() => {\n                        resetQuiz()\n                        setAccuracy('-');\n                        setWinningStreak('0');\n                        setRank('-');\n                     }}>\n                        Reset Progress\n                     </Text>\n                  </TouchableOpacity>\n               </View>\n\n         {(!comingFromHome) ? (\n            <>\n\n               <View style={[styles.settingContainer, { backgroundColor: colors.light, borderColor: colors.dark }]}>\n                  <TouchableOpacity>\n                     <Text style={[styles.settingText, { color: colors.dark, }]} onPress={() => {\n                       navigation.navigate('HomeScreen')\n                     }}>\n                        Home\n                     </Text>\n                  </TouchableOpacity>\n               </View>\n            </>) : null}\n\n\n\n\n\n      </View>\n   )\n}\n\n\nconst styles = StyleSheet.create({\n   container: {\n      flex: 1,\n\n   },\n   logo: {\n      fontSize: 40,\n      fontFamily: 'Poppins-Regular',\n      textAlign: 'left',\n   },\n   logoContainer: {\n      marginTop: 50,\n      marginBottom: 10,\n      marginHorizontal: 20\n   },\n\n\n   settingContainer: {\n      minWidth: '90%',\n      borderWidth: 2,\n      marginHorizontal: 20,\n      borderRadius: 10,\n      padding: 10,\n      marginVertical: 10\n   },\n   settingText: {\n      fontFamily: 'Poppins-Bold',\n      fontSize: 17,\n      textAlign: 'center'\n   }\n\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}